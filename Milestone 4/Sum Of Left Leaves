/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int sumOfLeftLeaves(TreeNode* root) {
        int ans = 0; 
        stack<pair<TreeNode*, bool>> stk; 
        stk.emplace(root, false); 
        while (stk.size()) {
            auto [node, tf] = stk.top(); stk.pop(); 
            if (!node->left && !node->right && tf) ans += node->val; 
            if (node->left) stk.emplace(node->left, true); 
            if (node->right) stk.emplace(node->right, false); 
        }
        return ans; 
    }
};
